{
    "env": {
      "browser": true,
      "es2021": true,
      "jest": true,
      "node": true
    },
    "extends": [
      "airbnb",
      "prettier",
      "eslint:recommended",
      "plugin:prettier/recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:react/recommended",
      "plugin:@next/next/recommended",
      "plugin:react-hooks/recommended",
      "plugin:jsx-a11y/recommended",
      "prettier",
      "plugin:import/typescript"
    ],
    "ignorePatterns": ["node_modules/*", ".next/*", ".out/*"],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaFeatures": {
          "jsx": true
      },
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "plugins": [
      "react",
      "prettier",
      "@typescript-eslint"
    ],
    "settings": {
      "import/resolver": {
        "typescript": {},
        "node": {
          "extensions": [".js", ".jsx", ".ts", ".tsx", ".json"]
        }
      }
    },
    "rules": {
      "prettier/prettier": "error",
      "prefer-const": ["error", {
          "destructuring": "any",
          "ignoreReadBeforeAssign": false
      }],
      "linebreak-style": [
        "error",
        "unix"
      ],
      "indent": [
        "error",
        2,
        {
            "ignoredNodes": ["TemplateLiteral > *"],
            "SwitchCase": 1
        }
      ],
      "react/jsx-filename-extension": [
        1,
        {
          "extensions": [
            ".js",
            ".jsx",
            ".tsx"
          ]
        }
      ],
      "quotes": ["error", "single"],
      "semi": ["error", "never"],
      "no-multi-spaces": ["error"],
      "react/jsx-props-no-spreading": "off",
      "no-use-before-define": "off",
      "@typescript-eslint/no-use-before-define": ["error"],
      "react/prop-types": "off",
      // No need to import React when using Next.js
      "react/react-in-jsx-scope": "off",
      // This rule is not compatible with Next.js"s <Link /> components
      "jsx-a11y/anchor-is-valid": "off",
      // Why would you want unused vars?
      "@typescript-eslint/no-unused-vars": ["error"],
      // I suggest this setting for requiring return types on functions only where useful
      "@typescript-eslint/explicit-function-return-type": [
        "warn",
        {
          "allowExpressions": true,
          "allowConciseArrowFunctionExpressionsStartingWithVoid": true
        }
      ],
      "import/extensions": [
        "error",
        "ignorePackages",
        {
          "js": "never",
          "jsx": "never",
          "mjs": "never",
          "ts": "never",
          "tsx": "never"
        }
      ]
    }
  }
  